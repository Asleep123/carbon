"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[836],{3353:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(5402),r=t(1487);const i={title:"Commands",sidebar_position:2},s=void 0,a={id:"creating-your-bot/components",title:"Commands",description:"Commands are what the user will use to interact with your bot. They can be anything from simple commands like ping to more complex commands like ban.",source:"@site/docs/creating-your-bot/components.mdx",sourceDirName:"creating-your-bot",slug:"/creating-your-bot/components",permalink:"/docs/creating-your-bot/components",draft:!1,unlisted:!1,editUrl:"https://github.com/buape/carbon/tree/main/apps/website/docs/docs/creating-your-bot/components.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Commands",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Creating the Main File",permalink:"/docs/creating-your-bot/the-main-file"},next:{title:"Options",permalink:"/docs/creating-your-bot/options"}},d={},c=[{value:"Creating a Command",id:"creating-a-command",level:2},{value:"Adding a Handler",id:"adding-a-handler",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Commands are what the user will use to interact with your bot. They can be anything from simple commands like ",(0,o.jsx)(n.code,{children:"ping"})," to more complex commands like ",(0,o.jsx)(n.code,{children:"ban"}),"."]}),"\n",(0,o.jsx)(n.p,{children:'For our bot, let\'s create a ping command. This command will respond with "Pong!" when the user runs it.'}),"\n",(0,o.jsx)(n.h2,{id:"creating-a-command",children:"Creating a Command"}),"\n",(0,o.jsxs)(n.p,{children:["To create a command, we need to create a new file in the ",(0,o.jsx)(n.code,{children:"commands"})," folder. Let's call it ",(0,o.jsx)(n.code,{children:"ping.js"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'import { Command } from "@buape/carbon"\n\nexport default class PingCommand extends Command {\n\tname = "ping"\n\tdescription = "A simple ping command"\n\tdefer = true\n\tephemeral = false\n}\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Every component needs to extend one of the ",(0,o.jsx)(n.code,{children:"Command"})," classes. In this case, we are using the regular ",(0,o.jsx)(n.code,{children:"Command"})," class.\nThe ",(0,o.jsx)(n.code,{children:"name"})," property is the name of the command. This is what the user will use to run the command.\nThe ",(0,o.jsx)(n.code,{children:"description"})," property is a description of the command. This is what the user will see when they run the help command.\nThe ",(0,o.jsx)(n.code,{children:"defer"})," property is a boolean that determines whether the command should be deferred or not. If it is set to ",(0,o.jsx)(n.code,{children:"true"}),", the command response will be deferred and show a Thinking... message. If it is set to ",(0,o.jsx)(n.code,{children:"false"})," or not set at all, the command will be replied to immediately.\nThe ",(0,o.jsx)(n.code,{children:"ephemeral"})," property is a boolean that determines whether the command should be ephemeral or not. If it is set to ",(0,o.jsx)(n.code,{children:"true"}),", the command response will be ephemeral. If it is set to ",(0,o.jsx)(n.code,{children:"false"})," or not set at all, the command response will be visible to everyone."]}),"\n",(0,o.jsx)(n.h2,{id:"adding-a-handler",children:"Adding a Handler"}),"\n",(0,o.jsx)(n.p,{children:"Now that we have our component, we need to add a handler. This handler will be called when the component is triggered."}),"\n",(0,o.jsx)(n.p,{children:"Add this code below the constructor, but still within the class you created"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'\tasync run(interaction) {\n\t\tinteraction.reply({ content: "Pong" })\n\t}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This run method will be called when the component is triggered. It gives you an ",(0,o.jsx)(n.code,{children:"interaction"})," object that you can use to see the user who triggered the command, the channel it was triggered in, and more."]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1487:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(9554);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);